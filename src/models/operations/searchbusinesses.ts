/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";

/**
 * The criteria to sort the results (e.g., "recommended", "highest_rated", etc.)
 */
export const SearchBusinessesSortBy = {
  Recommended: "recommended",
  HighestRated: "highest_rated",
  ReviewCount: "review_count",
} as const;
/**
 * The criteria to sort the results (e.g., "recommended", "highest_rated", etc.)
 */
export type SearchBusinessesSortBy = ClosedEnum<typeof SearchBusinessesSortBy>;

export type SearchBusinessesRequestBody = {
  /**
   * The search term to find businesses
   */
  query: string;
  /**
   * The location to search for businesses
   */
  location: string;
  /**
   * The criteria to sort the results (e.g., "recommended", "highest_rated", etc.)
   */
  sortBy?: SearchBusinessesSortBy | undefined;
  /**
   * The starting index for pagination (default is 0)
   */
  start?: number | undefined;
};

/**
 * SearchBusinesses API successful response
 */
export type SearchBusinessesResponseBody = {
  businesses?: Array<components.YelpBusiness> | undefined;
};

/** @internal */
export const SearchBusinessesSortBy$inboundSchema: z.ZodNativeEnum<
  typeof SearchBusinessesSortBy
> = z.nativeEnum(SearchBusinessesSortBy);

/** @internal */
export const SearchBusinessesSortBy$outboundSchema: z.ZodNativeEnum<
  typeof SearchBusinessesSortBy
> = SearchBusinessesSortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchBusinessesSortBy$ {
  /** @deprecated use `SearchBusinessesSortBy$inboundSchema` instead. */
  export const inboundSchema = SearchBusinessesSortBy$inboundSchema;
  /** @deprecated use `SearchBusinessesSortBy$outboundSchema` instead. */
  export const outboundSchema = SearchBusinessesSortBy$outboundSchema;
}

/** @internal */
export const SearchBusinessesRequestBody$inboundSchema: z.ZodType<
  SearchBusinessesRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: z.string(),
  location: z.string(),
  sort_by: SearchBusinessesSortBy$inboundSchema.optional(),
  start: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "sort_by": "sortBy",
  });
});

/** @internal */
export type SearchBusinessesRequestBody$Outbound = {
  query: string;
  location: string;
  sort_by?: string | undefined;
  start?: number | undefined;
};

/** @internal */
export const SearchBusinessesRequestBody$outboundSchema: z.ZodType<
  SearchBusinessesRequestBody$Outbound,
  z.ZodTypeDef,
  SearchBusinessesRequestBody
> = z.object({
  query: z.string(),
  location: z.string(),
  sortBy: SearchBusinessesSortBy$outboundSchema.optional(),
  start: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    sortBy: "sort_by",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchBusinessesRequestBody$ {
  /** @deprecated use `SearchBusinessesRequestBody$inboundSchema` instead. */
  export const inboundSchema = SearchBusinessesRequestBody$inboundSchema;
  /** @deprecated use `SearchBusinessesRequestBody$outboundSchema` instead. */
  export const outboundSchema = SearchBusinessesRequestBody$outboundSchema;
  /** @deprecated use `SearchBusinessesRequestBody$Outbound` instead. */
  export type Outbound = SearchBusinessesRequestBody$Outbound;
}

/** @internal */
export const SearchBusinessesResponseBody$inboundSchema: z.ZodType<
  SearchBusinessesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  businesses: z.array(components.YelpBusiness$inboundSchema).optional(),
});

/** @internal */
export type SearchBusinessesResponseBody$Outbound = {
  businesses?: Array<components.YelpBusiness$Outbound> | undefined;
};

/** @internal */
export const SearchBusinessesResponseBody$outboundSchema: z.ZodType<
  SearchBusinessesResponseBody$Outbound,
  z.ZodTypeDef,
  SearchBusinessesResponseBody
> = z.object({
  businesses: z.array(components.YelpBusiness$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchBusinessesResponseBody$ {
  /** @deprecated use `SearchBusinessesResponseBody$inboundSchema` instead. */
  export const inboundSchema = SearchBusinessesResponseBody$inboundSchema;
  /** @deprecated use `SearchBusinessesResponseBody$outboundSchema` instead. */
  export const outboundSchema = SearchBusinessesResponseBody$outboundSchema;
  /** @deprecated use `SearchBusinessesResponseBody$Outbound` instead. */
  export type Outbound = SearchBusinessesResponseBody$Outbound;
}
