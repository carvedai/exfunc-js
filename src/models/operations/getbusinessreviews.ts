/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The criteria to sort reviews (e.g., "best_match", "newest", etc.)
 */
export const GetBusinessReviewsSortBy = {
  BestMatch: "best_match",
  Newest: "newest",
  Oldest: "oldest",
  HighestRated: "highest_rated",
  LowestRated: "lowest_rated",
  Elites: "elites",
} as const;
/**
 * The criteria to sort reviews (e.g., "best_match", "newest", etc.)
 */
export type GetBusinessReviewsSortBy = ClosedEnum<
  typeof GetBusinessReviewsSortBy
>;

export type GetBusinessReviewsRequestBody = {
  /**
   * The ID of the business to retrieve reviews for
   */
  businessId: string;
  /**
   * The criteria to sort reviews (e.g., "best_match", "newest", etc.)
   */
  sortBy?: GetBusinessReviewsSortBy | undefined;
  /**
   * The page number of results to retrieve (default is 1)
   */
  page?: number | undefined;
  /**
   * The number of reviews to retrieve per page (default is 10)
   */
  perPage?: number | undefined;
};

/**
 * GetBusinessReviews API successful response
 */
export type GetBusinessReviewsResponseBody = {
  reviews?: Array<components.YelpReview> | undefined;
};

/** @internal */
export const GetBusinessReviewsSortBy$inboundSchema: z.ZodNativeEnum<
  typeof GetBusinessReviewsSortBy
> = z.nativeEnum(GetBusinessReviewsSortBy);

/** @internal */
export const GetBusinessReviewsSortBy$outboundSchema: z.ZodNativeEnum<
  typeof GetBusinessReviewsSortBy
> = GetBusinessReviewsSortBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBusinessReviewsSortBy$ {
  /** @deprecated use `GetBusinessReviewsSortBy$inboundSchema` instead. */
  export const inboundSchema = GetBusinessReviewsSortBy$inboundSchema;
  /** @deprecated use `GetBusinessReviewsSortBy$outboundSchema` instead. */
  export const outboundSchema = GetBusinessReviewsSortBy$outboundSchema;
}

/** @internal */
export const GetBusinessReviewsRequestBody$inboundSchema: z.ZodType<
  GetBusinessReviewsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  business_id: z.string(),
  sort_by: GetBusinessReviewsSortBy$inboundSchema.optional(),
  page: z.number().int().optional(),
  per_page: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "business_id": "businessId",
    "sort_by": "sortBy",
    "per_page": "perPage",
  });
});

/** @internal */
export type GetBusinessReviewsRequestBody$Outbound = {
  business_id: string;
  sort_by?: string | undefined;
  page?: number | undefined;
  per_page?: number | undefined;
};

/** @internal */
export const GetBusinessReviewsRequestBody$outboundSchema: z.ZodType<
  GetBusinessReviewsRequestBody$Outbound,
  z.ZodTypeDef,
  GetBusinessReviewsRequestBody
> = z.object({
  businessId: z.string(),
  sortBy: GetBusinessReviewsSortBy$outboundSchema.optional(),
  page: z.number().int().optional(),
  perPage: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    businessId: "business_id",
    sortBy: "sort_by",
    perPage: "per_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBusinessReviewsRequestBody$ {
  /** @deprecated use `GetBusinessReviewsRequestBody$inboundSchema` instead. */
  export const inboundSchema = GetBusinessReviewsRequestBody$inboundSchema;
  /** @deprecated use `GetBusinessReviewsRequestBody$outboundSchema` instead. */
  export const outboundSchema = GetBusinessReviewsRequestBody$outboundSchema;
  /** @deprecated use `GetBusinessReviewsRequestBody$Outbound` instead. */
  export type Outbound = GetBusinessReviewsRequestBody$Outbound;
}

export function getBusinessReviewsRequestBodyToJSON(
  getBusinessReviewsRequestBody: GetBusinessReviewsRequestBody,
): string {
  return JSON.stringify(
    GetBusinessReviewsRequestBody$outboundSchema.parse(
      getBusinessReviewsRequestBody,
    ),
  );
}

export function getBusinessReviewsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetBusinessReviewsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBusinessReviewsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBusinessReviewsRequestBody' from JSON`,
  );
}

/** @internal */
export const GetBusinessReviewsResponseBody$inboundSchema: z.ZodType<
  GetBusinessReviewsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reviews: z.array(components.YelpReview$inboundSchema).optional(),
});

/** @internal */
export type GetBusinessReviewsResponseBody$Outbound = {
  reviews?: Array<components.YelpReview$Outbound> | undefined;
};

/** @internal */
export const GetBusinessReviewsResponseBody$outboundSchema: z.ZodType<
  GetBusinessReviewsResponseBody$Outbound,
  z.ZodTypeDef,
  GetBusinessReviewsResponseBody
> = z.object({
  reviews: z.array(components.YelpReview$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBusinessReviewsResponseBody$ {
  /** @deprecated use `GetBusinessReviewsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetBusinessReviewsResponseBody$inboundSchema;
  /** @deprecated use `GetBusinessReviewsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetBusinessReviewsResponseBody$outboundSchema;
  /** @deprecated use `GetBusinessReviewsResponseBody$Outbound` instead. */
  export type Outbound = GetBusinessReviewsResponseBody$Outbound;
}

export function getBusinessReviewsResponseBodyToJSON(
  getBusinessReviewsResponseBody: GetBusinessReviewsResponseBody,
): string {
  return JSON.stringify(
    GetBusinessReviewsResponseBody$outboundSchema.parse(
      getBusinessReviewsResponseBody,
    ),
  );
}

export function getBusinessReviewsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetBusinessReviewsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBusinessReviewsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBusinessReviewsResponseBody' from JSON`,
  );
}
