/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetProductReviewsRequestBody = {
  /**
   * The ID of the product for which to retrieve reviews
   */
  productId: string;
  /**
   * The country code for the reviews
   */
  countryCode?: string | undefined;
  /**
   * Number of reviews to return per page (default is 10)
   */
  perPage?: number | undefined;
};

/**
 * GetProductReviews API successful response
 */
export type GetProductReviewsResponseBody = {
  reviews?: Array<components.GoogleProductReview> | undefined;
};

/** @internal */
export const GetProductReviewsRequestBody$inboundSchema: z.ZodType<
  GetProductReviewsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  product_id: z.string(),
  country_code: z.string().optional(),
  per_page: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "product_id": "productId",
    "country_code": "countryCode",
    "per_page": "perPage",
  });
});

/** @internal */
export type GetProductReviewsRequestBody$Outbound = {
  product_id: string;
  country_code?: string | undefined;
  per_page?: number | undefined;
};

/** @internal */
export const GetProductReviewsRequestBody$outboundSchema: z.ZodType<
  GetProductReviewsRequestBody$Outbound,
  z.ZodTypeDef,
  GetProductReviewsRequestBody
> = z.object({
  productId: z.string(),
  countryCode: z.string().optional(),
  perPage: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    productId: "product_id",
    countryCode: "country_code",
    perPage: "per_page",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductReviewsRequestBody$ {
  /** @deprecated use `GetProductReviewsRequestBody$inboundSchema` instead. */
  export const inboundSchema = GetProductReviewsRequestBody$inboundSchema;
  /** @deprecated use `GetProductReviewsRequestBody$outboundSchema` instead. */
  export const outboundSchema = GetProductReviewsRequestBody$outboundSchema;
  /** @deprecated use `GetProductReviewsRequestBody$Outbound` instead. */
  export type Outbound = GetProductReviewsRequestBody$Outbound;
}

export function getProductReviewsRequestBodyToJSON(
  getProductReviewsRequestBody: GetProductReviewsRequestBody,
): string {
  return JSON.stringify(
    GetProductReviewsRequestBody$outboundSchema.parse(
      getProductReviewsRequestBody,
    ),
  );
}

export function getProductReviewsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetProductReviewsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProductReviewsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProductReviewsRequestBody' from JSON`,
  );
}

/** @internal */
export const GetProductReviewsResponseBody$inboundSchema: z.ZodType<
  GetProductReviewsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reviews: z.array(components.GoogleProductReview$inboundSchema).optional(),
});

/** @internal */
export type GetProductReviewsResponseBody$Outbound = {
  reviews?: Array<components.GoogleProductReview$Outbound> | undefined;
};

/** @internal */
export const GetProductReviewsResponseBody$outboundSchema: z.ZodType<
  GetProductReviewsResponseBody$Outbound,
  z.ZodTypeDef,
  GetProductReviewsResponseBody
> = z.object({
  reviews: z.array(components.GoogleProductReview$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductReviewsResponseBody$ {
  /** @deprecated use `GetProductReviewsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetProductReviewsResponseBody$inboundSchema;
  /** @deprecated use `GetProductReviewsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetProductReviewsResponseBody$outboundSchema;
  /** @deprecated use `GetProductReviewsResponseBody$Outbound` instead. */
  export type Outbound = GetProductReviewsResponseBody$Outbound;
}

export function getProductReviewsResponseBodyToJSON(
  getProductReviewsResponseBody: GetProductReviewsResponseBody,
): string {
  return JSON.stringify(
    GetProductReviewsResponseBody$outboundSchema.parse(
      getProductReviewsResponseBody,
    ),
  );
}

export function getProductReviewsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetProductReviewsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetProductReviewsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProductReviewsResponseBody' from JSON`,
  );
}
