/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  SkyScannerAirport,
  SkyScannerAirport$inboundSchema,
  SkyScannerAirport$Outbound,
  SkyScannerAirport$outboundSchema,
} from "./skyscannerairport.js";
import {
  SkyScannerCarrier,
  SkyScannerCarrier$inboundSchema,
  SkyScannerCarrier$Outbound,
  SkyScannerCarrier$outboundSchema,
} from "./skyscannercarrier.js";

export type SkyScannerSegment = {
  /**
   * The airport information
   */
  origin?: SkyScannerAirport | undefined;
  /**
   * The airport information
   */
  destination?: SkyScannerAirport | undefined;
  /**
   * The departure time of the segment
   */
  departureTime?: Date | undefined;
  /**
   * The arrival time of the segment
   */
  arrivalTime?: Date | undefined;
  /**
   * Duration of the segment in minutes
   */
  durationInMinutes?: number | undefined;
  /**
   * Flight number for the segment
   */
  flightNumber?: string | undefined;
  /**
   * The carrier details
   */
  marketingCarrier?: SkyScannerCarrier | undefined;
  /**
   * The carrier details
   */
  operatingCarrier?: SkyScannerCarrier | undefined;
};

/** @internal */
export const SkyScannerSegment$inboundSchema: z.ZodType<
  SkyScannerSegment,
  z.ZodTypeDef,
  unknown
> = z.object({
  origin: SkyScannerAirport$inboundSchema.optional(),
  destination: SkyScannerAirport$inboundSchema.optional(),
  departure_time: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  arrival_time: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  duration_in_minutes: z.number().optional(),
  flight_number: z.string().optional(),
  marketing_carrier: SkyScannerCarrier$inboundSchema.optional(),
  operating_carrier: SkyScannerCarrier$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "departure_time": "departureTime",
    "arrival_time": "arrivalTime",
    "duration_in_minutes": "durationInMinutes",
    "flight_number": "flightNumber",
    "marketing_carrier": "marketingCarrier",
    "operating_carrier": "operatingCarrier",
  });
});

/** @internal */
export type SkyScannerSegment$Outbound = {
  origin?: SkyScannerAirport$Outbound | undefined;
  destination?: SkyScannerAirport$Outbound | undefined;
  departure_time?: string | undefined;
  arrival_time?: string | undefined;
  duration_in_minutes?: number | undefined;
  flight_number?: string | undefined;
  marketing_carrier?: SkyScannerCarrier$Outbound | undefined;
  operating_carrier?: SkyScannerCarrier$Outbound | undefined;
};

/** @internal */
export const SkyScannerSegment$outboundSchema: z.ZodType<
  SkyScannerSegment$Outbound,
  z.ZodTypeDef,
  SkyScannerSegment
> = z.object({
  origin: SkyScannerAirport$outboundSchema.optional(),
  destination: SkyScannerAirport$outboundSchema.optional(),
  departureTime: z.date().transform(v => v.toISOString()).optional(),
  arrivalTime: z.date().transform(v => v.toISOString()).optional(),
  durationInMinutes: z.number().optional(),
  flightNumber: z.string().optional(),
  marketingCarrier: SkyScannerCarrier$outboundSchema.optional(),
  operatingCarrier: SkyScannerCarrier$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    departureTime: "departure_time",
    arrivalTime: "arrival_time",
    durationInMinutes: "duration_in_minutes",
    flightNumber: "flight_number",
    marketingCarrier: "marketing_carrier",
    operatingCarrier: "operating_carrier",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SkyScannerSegment$ {
  /** @deprecated use `SkyScannerSegment$inboundSchema` instead. */
  export const inboundSchema = SkyScannerSegment$inboundSchema;
  /** @deprecated use `SkyScannerSegment$outboundSchema` instead. */
  export const outboundSchema = SkyScannerSegment$outboundSchema;
  /** @deprecated use `SkyScannerSegment$Outbound` instead. */
  export type Outbound = SkyScannerSegment$Outbound;
}
