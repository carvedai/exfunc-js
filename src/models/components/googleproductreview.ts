/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GoogleProductReview = {
  /**
   * The unique identifier for the review
   */
  reviewId?: string | undefined;
  /**
   * The title of the review
   */
  title?: string | undefined;
  /**
   * The author of the review
   */
  author?: string | undefined;
  /**
   * The source where the review was published
   */
  source?: string | undefined;
  /**
   * The URL link to the review source
   */
  sourceUrl?: string | undefined;
  /**
   * The text content of the review
   */
  text?: string | undefined;
  /**
   * The rating given in the review
   */
  rating?: number | undefined;
  /**
   * The date and time when the review was published in UTC
   */
  datetimeUtc?: Date | undefined;
  /**
   * An array of URLs for photos included in the review
   */
  photos?: Array<string> | undefined;
};

/** @internal */
export const GoogleProductReview$inboundSchema: z.ZodType<
  GoogleProductReview,
  z.ZodTypeDef,
  unknown
> = z.object({
  review_id: z.string().optional(),
  title: z.string().optional(),
  author: z.string().optional(),
  source: z.string().optional(),
  source_url: z.string().optional(),
  text: z.string().optional(),
  rating: z.number().optional(),
  datetime_utc: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  photos: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "review_id": "reviewId",
    "source_url": "sourceUrl",
    "datetime_utc": "datetimeUtc",
  });
});

/** @internal */
export type GoogleProductReview$Outbound = {
  review_id?: string | undefined;
  title?: string | undefined;
  author?: string | undefined;
  source?: string | undefined;
  source_url?: string | undefined;
  text?: string | undefined;
  rating?: number | undefined;
  datetime_utc?: string | undefined;
  photos?: Array<string> | undefined;
};

/** @internal */
export const GoogleProductReview$outboundSchema: z.ZodType<
  GoogleProductReview$Outbound,
  z.ZodTypeDef,
  GoogleProductReview
> = z.object({
  reviewId: z.string().optional(),
  title: z.string().optional(),
  author: z.string().optional(),
  source: z.string().optional(),
  sourceUrl: z.string().optional(),
  text: z.string().optional(),
  rating: z.number().optional(),
  datetimeUtc: z.date().transform(v => v.toISOString()).optional(),
  photos: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    reviewId: "review_id",
    sourceUrl: "source_url",
    datetimeUtc: "datetime_utc",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GoogleProductReview$ {
  /** @deprecated use `GoogleProductReview$inboundSchema` instead. */
  export const inboundSchema = GoogleProductReview$inboundSchema;
  /** @deprecated use `GoogleProductReview$outboundSchema` instead. */
  export const outboundSchema = GoogleProductReview$outboundSchema;
  /** @deprecated use `GoogleProductReview$Outbound` instead. */
  export type Outbound = GoogleProductReview$Outbound;
}
