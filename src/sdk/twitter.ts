/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { twitterGetTweet } from "../funcs/twitterGetTweet.js";
import { twitterGetUser } from "../funcs/twitterGetUser.js";
import { twitterGetUserFollowers } from "../funcs/twitterGetUserFollowers.js";
import { twitterGetUserFollowings } from "../funcs/twitterGetUserFollowings.js";
import { twitterGetUserTweets } from "../funcs/twitterGetUserTweets.js";
import { twitterSearchTweets } from "../funcs/twitterSearchTweets.js";
import { twitterSearchUsers } from "../funcs/twitterSearchUsers.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Twitter extends ClientSDK {
  /**
   * Get a tweet by ID
   *
   * @remarks
   * Get tweet details given a tweet ID
   */
  async getTweet(
    request: operations.GetTweetRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetTweetResponseBody> {
    return unwrapAsync(twitterGetTweet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a Twitter user by either user ID or username
   *
   * @remarks
   * Get user details given a Twitter user ID or username (handle)
   */
  async getUser(
    request: operations.GetUserRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetUserResponseBody> {
    return unwrapAsync(twitterGetUser(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a Twitter user's followers by username
   *
   * @remarks
   * Get a list of followers given a Twitter username (handle)
   */
  async getUserFollowers(
    request: operations.GetUserFollowersRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetUserFollowersResponseBody> {
    return unwrapAsync(twitterGetUserFollowers(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a Twitter user's followings by username
   *
   * @remarks
   * Get a list of followings given a Twitter username (handle)
   */
  async getUserFollowings(
    request: operations.GetUserFollowingsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetUserFollowingsResponseBody> {
    return unwrapAsync(twitterGetUserFollowings(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a Twitter user's tweets by username
   *
   * @remarks
   * Get a list of tweets given a Twitter username (handle)
   */
  async getUserTweets(
    request: operations.GetUserTweetsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetUserTweetsResponseBody> {
    return unwrapAsync(twitterGetUserTweets(
      this,
      request,
      options,
    ));
  }

  /**
   * Search Twitter for tweets
   *
   * @remarks
   * Search tweets on Twitter for a given query
   */
  async searchTweets(
    request: operations.SearchTweetsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.SearchTweetsResponseBody> {
    return unwrapAsync(twitterSearchTweets(
      this,
      request,
      options,
    ));
  }

  /**
   * Search Twitter for users
   *
   * @remarks
   * Search users on Twitter for a given query
   */
  async searchUsers(
    request: operations.SearchUsersRequestBody,
    options?: RequestOptions,
  ): Promise<operations.SearchUsersResponseBody> {
    return unwrapAsync(twitterSearchUsers(
      this,
      request,
      options,
    ));
  }
}
