/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { navigatorGetTask } from "../funcs/navigatorGetTask.js";
import { navigatorScrape } from "../funcs/navigatorScrape.js";
import { navigatorStartTask } from "../funcs/navigatorStartTask.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Navigator extends ClientSDK {
  /**
   * Get web navigator task results
   *
   * @remarks
   * Get web navigator task results for a given task ID
   */
  async getTask(
    request: operations.GetTaskRequestBody,
    options?: RequestOptions,
  ): Promise<operations.GetTaskResponseBody> {
    return unwrapAsync(navigatorGetTask(
      this,
      request,
      options,
    ));
  }

  /**
   * Start a web navigator task
   *
   * @remarks
   * Start a web navigator task for a given url and objective
   */
  async startTask(
    request: operations.StartTaskRequestBody,
    options?: RequestOptions,
  ): Promise<operations.StartTaskResponseBody> {
    return unwrapAsync(navigatorStartTask(
      this,
      request,
      options,
    ));
  }

  /**
   * Scrape a web page
   *
   * @remarks
   * Scrape a web page for a given url
   */
  async scrape(
    request: operations.ScrapeRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ScrapeResponseBody> {
    return unwrapAsync(navigatorScrape(
      this,
      request,
      options,
    ));
  }
}
